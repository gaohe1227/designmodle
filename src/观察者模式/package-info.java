/**
 * Description:观察者模式（有时又被称为发布（publish ）-订阅（Subscribe）模式、
 *             模型-视图（View）模式、源-收听者(Listener)模式或从属者模式）是软件设计模式的一种。
 *             在此种模式中，一个目标物件管理所有相依于它的观察者物件，并且在它本身的状态改变时主动发出通知。
 *             这通常透过呼叫各观察者所提供的方法来实现。此种模式通常被用来实现事件处理系统
 *             
 *             
 *             
 *             实现观察者模式有很多形式，比较直观的一种是使用一种“注册——通知——撤销注册”的形式。 

观察者
（Observer）将自己注册到被观察对象（Subject）中，被观察对象将观察者存放在一个容器（Container）里。
被观察
被观察对象发生了某种变化（如图中的SomeChange），从容器中得到所有注册过的观察者，将变化通知观察者。
撤销观察
观察者告诉被观察者要撤销观察，被观察者从容器中将观察者去除。
观察者将自己注册到被观察者的容器中时，被观察者不应该过问观察者的具体类型，而是应该使用观察者的接口。这样的优点是：假定程序中还有别的观察者，那么只要这个观察者也是相同的接口实现即可。一个被观察者可以对应多个观察者，当被观察者发生变化的时候，他可以将消息一一通知给所有的观察者。基于接口，而不是具体的实现——这一点为程序提供了更大的灵活性。
 * @author:高鹤
 * @date:2017年9月19日
 */
package 观察者模式;